name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version (e.g. 5)'
        required: true

env:
  REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}
  IMAGE_NAME: app

jobs:
  fix:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run lint and test
        run: |
          npm run lint
          npm test

      - name: Set version info
        run: |
          echo "FIX_VERSION=${{ github.event.inputs.release_version }}_fix${{ github.run_number }}" >> $GITHUB_ENV
          echo "TAG=v${{ github.event.inputs.release_version }}_fix${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ env.FIX_VERSION }} .
          docker tag $REGISTRY/$IMAGE_NAME:${{ env.FIX_VERSION }} $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_latest

      - name: Login with OAuth token
        run: echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ env.FIX_VERSION }}
          docker push $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_latest

      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $TAG
          git push origin $TAG

      - name: Generate changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 --match "v${{ github.event.inputs.release_version }}*" 2>/dev/null || echo "")
          COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%an)")
          echo "COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment on release issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.inputs.release_version }}
          body: |
            🔧 **Фикс-релиз:** `${{ env.FIX_VERSION }}`
            📅 Дата: `${{ github.event.created_at }}`
            🧑 Автор: `${{ github.actor }}`
            🐳 Образ: `$REGISTRY/$IMAGE_NAME:${{ env.FIX_VERSION }}`
            ✏️ Коммиты:
            ${{ env.COMMITS }}
